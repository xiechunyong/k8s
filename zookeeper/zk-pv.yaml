apiVersion: v1
kind: PersistentVolume
metadata:
  name: zookeeper34-pv1
  namespace: spring-cloud-demo
  labels:
    app: zk
spec:
  storageClassName: zookeeper34
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  nfs:
    path: /var/share/zk01 # ⑦
    server: 47.114.90.75 # ⑧
  persistentVolumeReclaimPolicy: Recycle
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: zookeeper34-pv2
  namespace: spring-cloud-demo
  labels:
    app: zk
spec:
  storageClassName: zookeeper34
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  nfs:
    path: /var/share/zk02 # ⑦
    server: 47.114.90.75 # ⑧
  persistentVolumeReclaimPolicy: Recycle
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: zookeeper34-pv3
  namespace: spring-cloud-demo
  labels:
    app: zk
spec:
  storageClassName: zookeeper34
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  nfs:
    path: /var/share/zk03 # ⑦
    server: 47.114.90.75 # ⑧
  persistentVolumeReclaimPolicy: Recycle
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper34-svc
  labels:
    app: zookeeper34
spec:
  selector:
    app: zookeeper34
  clusterIP: None
  ports:
  - name: server
    port: 2888
  - name: leader-election
    port: 3888
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: zookeeper34-pdb
spec:
  selector:
    matchLabels:
      app: zookeeper34
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper34-sts
spec:
  selector:
    matchLabels:
      app: zookeeper34 # has to match .spec.template.metadata.labels
  serviceName: zookeeper34-svc
  replicas: 3 # by default is 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: zookeeper34 # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: zookeeper34
        imagePullPolicy: IfNotPresent
        image: mirrorgooglecontainers/kubernetes-zookeeper:1.0-3.4.10
        resources:
          requests:
            memory: "500Mi"
            cpu: "0.5"
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        command:
        - sh
        - -c
        - "start-zookeeper \
        --servers=3 \
        --data_dir=/var/lib/zookeeper/data \
        --data_log_dir=/var/lib/zookeeper/data/log \
        --conf_dir=/opt/zookeeper/conf \
        --client_port=2181 \
        --election_port=3888 \
        --server_port=2888 \
        --tick_time=2000 \
        --init_limit=10 \
        --sync_limit=5 \
        --heap=512M \
        --max_client_cnxns=60 \
        --snap_retain_count=3 \
        --purge_interval=12 \
        --max_session_timeout=40000 \
        --min_session_timeout=4000 \
        --log_level=INFO"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: zookeeper-data
          mountPath: /var/lib/zookeeper
  volumeClaimTemplates:
  - metadata:
      name: zookeeper-data
      annotations:
        volume.beta.kubernetes.io/storage-class: "zookeeper34"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 200M
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper34-access-service
  labels:
    name: zookeeper34-access-service
spec:
  selector:
    app: zookeeper34
  type: NodePort
  ports:
  - name: client
    targetPort: 2181
    port: 2181
    nodePort: 30811
